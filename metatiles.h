#define SPEED 0x180
#pragma bss-name(push, "ZEROPAGE")

// GLOBAL VARIABLES
unsigned char x; // room loader code
unsigned char y;
unsigned char index;

#pragma bss-name(push, "BSS")

const unsigned char palette_bg[]={
0x0f, 0x07, 0x17, 0x21, // black, gray, lt gray, white
0x0f, 0x1a, 0x21, 0x39, // oranges
0x0f, 0x1c, 0x21, 0x39, // blues
0x0f, 0x39, 0x1a, 0x10, // greens
}; 

// 5 bytes per metatile definition, tile TL, TR, BL, BR, palette 0-3
// T means top, B means bottom, L left,R right
// 51 maximum # of metatiles = 255 bytes

const unsigned char metatiles1[]={
0x00, 0x00, 0x00, 0x00, 2,
0x01, 0x00, 0x02, 0x03, 2,
0x04, 0x05, 0x00, 0x00, 2,
0x06, 0x07, 0x00, 0x00, 2,
0x08, 0x09, 0x0b, 0x0b, 3,
0x09, 0x09, 0x0c, 0x0c, 3,
0x08, 0x09, 0x0b, 0x0c, 3,
0x0a, 0x00, 0x0d, 0x00, 2,
0x0e, 0x0e, 0x12, 0x12, 3,
0x0f, 0x0e, 0x13, 0x12, 3,
0x0f, 0x0e, 0x14, 0x15, 3,
0x00, 0x00, 0x17, 0x16, 2,
0x00, 0x00, 0x17, 0x18, 2,
0x00, 0x00, 0x19, 0x1a, 2,
0x00, 0x00, 0x19, 0x1c, 2,
0x00, 0x00, 0x11, 0x10, 1,
0x20, 0x21, 0x0d, 0x00, 2,
0x00, 0x22, 0x00, 0x24, 2,
0x08, 0x09, 0x0f, 0x0e, 3,
0x23, 0x23, 0x25, 0x26, 2,
0x23, 0x23, 0x27, 0x29, 2,
0x23, 0x23, 0x28, 0x2a, 2,
0x08, 0x08, 0x13, 0x12, 3,
0x08, 0x09, 0x13, 0x12, 3,
0x20, 0x21, 0x0a, 0x00, 2,
0x13, 0x12, 0x0f, 0x0e, 3,
0x25, 0x26, 0x25, 0x26, 2,
0x27, 0x29, 0x27, 0x29, 2,
0x28, 0x2a, 0x28, 0x2a, 2,
0x20, 0x21, 0x00, 0x00, 2,
0x28, 0x2a, 0x33, 0x33, 2,
0x0f, 0x0e, 0x1f, 0x1e, 3,
0x0e, 0x12, 0x1f, 0x1e, 3,
0x12, 0x12, 0x1f, 0x1e, 3,
0x2f, 0x30, 0x49, 0x49, 0,
0x31, 0x32, 0x3a, 0x3b, 0,
0x08, 0x08, 0x0f, 0x13, 3,
0x08, 0x08, 0x13, 0x3e, 3,
0x3f, 0x40, 0x42, 0x43, 0,
0x25, 0x26, 0x33, 0x33, 2,
0x27, 0x27, 0x33, 0x33, 2,
0x13, 0x12, 0x44, 0x45, 3,
0x0f, 0x0e, 0x0f, 0x0e, 3,
0x0f, 0x41, 0x0f, 0x0e, 3,
0x46, 0x46, 0x48, 0x48, 2,
0x47, 0x47, 0x48, 0x48, 2,
0x48, 0x48, 0x48, 0x48, 2,
};


#include "BG/Room1.c"
// data is exactly 240 bytes, 16 * 15
// doubles as the collision map data


// PROTOTYPES
void load_room(void);


