;
; File generated by cc65 v 2.18 - Git 41bd8d90
;
	.fopt		compiler,"cc65 v 2.18 - Git 41bd8d90"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_pal_bg
	.import		_ppu_off
	.import		_ppu_on_all
	.import		_bank_spr
	.import		_set_vram_update
	.import		_set_vram_buffer
	.import		_clear_vram_buffer
	.import		_get_ppu_addr
	.import		_set_data_pointer
	.import		_set_mt_pointer
	.import		_buffer_4_mt
	.import		_flush_vram_update_nmi
	.export		_RoundSprL
	.export		_RoundSprR
	.export		_pad1
	.export		_collision
	.export		_collision_L
	.export		_collision_R
	.export		_collision_U
	.export		_collision_D
	.export		_coordinates
	.export		_temp1
	.export		_temp2
	.export		_temp3
	.export		_temp4
	.export		_temp5
	.export		_temp6
	.export		_eject_L
	.export		_eject_R
	.export		_eject_D
	.export		_eject_U
	.export		_direction
	.export		_address
	.export		_x
	.export		_y
	.export		_index
	.export		_palette_bg
	.export		_metatiles1
	.export		_Room1
	.export		_load_room
	.export		_main

.segment	"RODATA"

_RoundSprL:
	.byte	$FF
	.byte	$FF
	.byte	$02
	.byte	$00
	.byte	$07
	.byte	$FF
	.byte	$03
	.byte	$00
	.byte	$FF
	.byte	$07
	.byte	$12
	.byte	$00
	.byte	$07
	.byte	$07
	.byte	$13
	.byte	$00
	.byte	$80
_RoundSprR:
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$FF
	.byte	$01
	.byte	$00
	.byte	$FF
	.byte	$07
	.byte	$10
	.byte	$00
	.byte	$07
	.byte	$07
	.byte	$11
	.byte	$00
	.byte	$80
_palette_bg:
	.byte	$0F
	.byte	$07
	.byte	$17
	.byte	$21
	.byte	$0F
	.byte	$1A
	.byte	$21
	.byte	$39
	.byte	$0F
	.byte	$1C
	.byte	$21
	.byte	$39
	.byte	$0F
	.byte	$39
	.byte	$1A
	.byte	$10
_metatiles1:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$01
	.byte	$00
	.byte	$02
	.byte	$03
	.byte	$02
	.byte	$04
	.byte	$05
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$06
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$08
	.byte	$09
	.byte	$0B
	.byte	$0B
	.byte	$03
	.byte	$09
	.byte	$09
	.byte	$0C
	.byte	$0C
	.byte	$03
	.byte	$08
	.byte	$09
	.byte	$0B
	.byte	$0C
	.byte	$03
	.byte	$0A
	.byte	$00
	.byte	$0D
	.byte	$00
	.byte	$02
	.byte	$0E
	.byte	$0E
	.byte	$12
	.byte	$12
	.byte	$03
	.byte	$0F
	.byte	$0E
	.byte	$13
	.byte	$12
	.byte	$03
	.byte	$0F
	.byte	$0E
	.byte	$14
	.byte	$15
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$17
	.byte	$16
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$17
	.byte	$18
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$19
	.byte	$1A
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$19
	.byte	$1C
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$11
	.byte	$10
	.byte	$01
	.byte	$20
	.byte	$21
	.byte	$0D
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$22
	.byte	$00
	.byte	$24
	.byte	$02
	.byte	$08
	.byte	$09
	.byte	$0F
	.byte	$0E
	.byte	$03
	.byte	$23
	.byte	$23
	.byte	$25
	.byte	$26
	.byte	$02
	.byte	$23
	.byte	$23
	.byte	$27
	.byte	$29
	.byte	$02
	.byte	$23
	.byte	$23
	.byte	$28
	.byte	$2A
	.byte	$02
	.byte	$08
	.byte	$08
	.byte	$13
	.byte	$12
	.byte	$03
	.byte	$08
	.byte	$09
	.byte	$13
	.byte	$12
	.byte	$03
	.byte	$20
	.byte	$21
	.byte	$0A
	.byte	$00
	.byte	$02
	.byte	$13
	.byte	$12
	.byte	$0F
	.byte	$0E
	.byte	$03
	.byte	$25
	.byte	$26
	.byte	$25
	.byte	$26
	.byte	$02
	.byte	$27
	.byte	$29
	.byte	$27
	.byte	$29
	.byte	$02
	.byte	$28
	.byte	$2A
	.byte	$28
	.byte	$2A
	.byte	$02
	.byte	$20
	.byte	$21
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$28
	.byte	$2A
	.byte	$33
	.byte	$33
	.byte	$02
	.byte	$0F
	.byte	$0E
	.byte	$1F
	.byte	$1E
	.byte	$03
	.byte	$0E
	.byte	$12
	.byte	$1F
	.byte	$1E
	.byte	$03
	.byte	$12
	.byte	$12
	.byte	$1F
	.byte	$1E
	.byte	$03
	.byte	$2F
	.byte	$30
	.byte	$49
	.byte	$49
	.byte	$00
	.byte	$31
	.byte	$32
	.byte	$3A
	.byte	$3B
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$0F
	.byte	$13
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$13
	.byte	$3E
	.byte	$03
	.byte	$3F
	.byte	$40
	.byte	$42
	.byte	$43
	.byte	$00
	.byte	$25
	.byte	$26
	.byte	$33
	.byte	$33
	.byte	$02
	.byte	$27
	.byte	$27
	.byte	$33
	.byte	$33
	.byte	$02
	.byte	$13
	.byte	$12
	.byte	$44
	.byte	$45
	.byte	$03
	.byte	$0F
	.byte	$0E
	.byte	$0F
	.byte	$0E
	.byte	$03
	.byte	$0F
	.byte	$41
	.byte	$0F
	.byte	$0E
	.byte	$03
	.byte	$46
	.byte	$46
	.byte	$48
	.byte	$48
	.byte	$02
	.byte	$47
	.byte	$47
	.byte	$48
	.byte	$48
	.byte	$02
	.byte	$48
	.byte	$48
	.byte	$48
	.byte	$48
	.byte	$02
_Room1:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$05
	.byte	$06
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$09
	.byte	$0A
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0B
	.byte	$0C
	.byte	$0D
	.byte	$0E
	.byte	$0F
	.byte	$0F
	.byte	$0F
	.byte	$0F
	.byte	$0F
	.byte	$08
	.byte	$0A
	.byte	$10
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$11
	.byte	$12
	.byte	$13
	.byte	$14
	.byte	$15
	.byte	$16
	.byte	$17
	.byte	$17
	.byte	$17
	.byte	$17
	.byte	$08
	.byte	$18
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$11
	.byte	$19
	.byte	$1A
	.byte	$1B
	.byte	$1C
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$1D
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$11
	.byte	$19
	.byte	$1A
	.byte	$1B
	.byte	$1C
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$11
	.byte	$19
	.byte	$1A
	.byte	$1B
	.byte	$1C
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$11
	.byte	$19
	.byte	$1A
	.byte	$1B
	.byte	$1C
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$11
	.byte	$19
	.byte	$1A
	.byte	$1B
	.byte	$1E
	.byte	$1F
	.byte	$1F
	.byte	$1F
	.byte	$20
	.byte	$21
	.byte	$22
	.byte	$22
	.byte	$23
	.byte	$22
	.byte	$23
	.byte	$00
	.byte	$11
	.byte	$19
	.byte	$1A
	.byte	$1B
	.byte	$16
	.byte	$16
	.byte	$24
	.byte	$24
	.byte	$24
	.byte	$25
	.byte	$00
	.byte	$00
	.byte	$26
	.byte	$00
	.byte	$26
	.byte	$00
	.byte	$11
	.byte	$19
	.byte	$27
	.byte	$28
	.byte	$19
	.byte	$19
	.byte	$29
	.byte	$19
	.byte	$2A
	.byte	$2B
	.byte	$2C
	.byte	$2C
	.byte	$2D
	.byte	$2C
	.byte	$2D
	.byte	$2C
	.byte	$2C
	.byte	$2C
	.byte	$2C
	.byte	$2C
	.byte	$2D
	.byte	$2D
	.byte	$2D
	.byte	$2D
	.byte	$2D
	.byte	$2D
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E

.segment	"BSS"

.segment	"ZEROPAGE"
_pad1:
	.res	1,$00
_collision:
	.res	1,$00
_collision_L:
	.res	1,$00
_collision_R:
	.res	1,$00
_collision_U:
	.res	1,$00
_collision_D:
	.res	1,$00
_coordinates:
	.res	1,$00
_temp1:
	.res	1,$00
_temp2:
	.res	1,$00
_temp3:
	.res	1,$00
_temp4:
	.res	1,$00
_temp5:
	.res	2,$00
_temp6:
	.res	2,$00
_eject_L:
	.res	1,$00
_eject_R:
	.res	1,$00
_eject_D:
	.res	1,$00
_eject_U:
	.res	1,$00
_direction:
	.res	1,$00
_address:
	.res	2,$00
_x:
	.res	1,$00
_y:
	.res	1,$00
_index:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ load_room (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_load_room: near

.segment	"CODE"

;
; set_data_pointer(Room1);
;
	lda     #<(_Room1)
	ldx     #>(_Room1)
	jsr     _set_data_pointer
;
; set_mt_pointer(metatiles1);
;
	lda     #<(_metatiles1)
	ldx     #>(_metatiles1)
	jsr     _set_mt_pointer
;
; for(y=0; ;y+=0x20){
;
	lda     #$00
L000E:	sta     _y
;
; for(x=0; ;x+=0x20){
;
	lda     #$00
L000D:	sta     _x
;
; clear_vram_buffer(); // do each frame, and before putting anything in the buffer
;
	jsr     _clear_vram_buffer
;
; address = get_ppu_addr(0, x, y);
;
	jsr     decsp2
	lda     #$00
	ldy     #$01
	sta     (sp),y
	lda     _x
	dey
	sta     (sp),y
	lda     _y
	jsr     _get_ppu_addr
	sta     _address
	stx     _address+1
;
; index = (y & 0xf0) + (x >> 4);
;
	lda     _y
	and     #$F0
	sta     ptr1
	lda     _x
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     _index
;
; buffer_4_mt(address, index); // ppu_address, index to the data
;
	lda     _address
	ldx     _address+1
	jsr     pushax
	lda     _index
	jsr     _buffer_4_mt
;
; flush_vram_update_nmi();
;
	jsr     _flush_vram_update_nmi
;
; if (x == 0xe0) break;
;
	ldx     #$00
	lda     _x
	cmp     #$E0
	beq     L000F
;
; for(x=0; ;x+=0x20){
;
	lda     #$20
	clc
	adc     _x
	jmp     L000D
;
; if (y == 0xe0) break;
;
L000F:	lda     _y
	cmp     #$E0
	beq     L0010
;
; for(y=0; ;y+=0x20){
;
	lda     #$20
	clc
	adc     _y
	jmp     L000E
;
; set_vram_update(NULL); // just turn ppu updates OFF for this example
;
L0010:	txa
	jmp     _set_vram_update

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; ppu_off(); // screen off
;
	jsr     _ppu_off
;
; pal_bg(palette_bg);
;
	lda     #<(_palette_bg)
	ldx     #>(_palette_bg)
	jsr     _pal_bg
;
; bank_spr(1);
;
	lda     #$01
	jsr     _bank_spr
;
; set_vram_buffer(); // do at least once, sets a pointer to a buffer
;
	jsr     _set_vram_buffer
;
; clear_vram_buffer();
;
	jsr     _clear_vram_buffer
;
; load_room();
;
	jsr     _load_room
;
; ppu_on_all(); // turn on screen
;
	jsr     _ppu_on_all
;
; while (1)
;
L0005:	jmp     L0005

.endproc

